{"ast":null,"code":"// import React from 'react';\n// // Define the type for props\n// interface InputNodeProps {\n//   data: {\n//     label: string; // Define the structure of the data prop here\n//     inputText: string; // Add this line if you want to capture inputText\n//   };\n// }\n// export const InputNode: React.FC<InputNodeProps> = ({ data }) => {\n//   return (\n//     <div style={{ padding: '10px', background: '#D8F3DC', border: '1px solid #40916C', borderRadius: '5px' }}>\n//       <strong>{data.label}</strong>\n//       <div>\n//         <input type=\"text\" placeholder=\"Enter Input\" />\n//       </div>\n//     </div>\n//   );\n// };\n// import React, { useState } from 'react';\n// const InputNode = () => {\n//     const [data, setData] = useState({\n//         inputText: '',\n//         setInputText: (value: any) => setData(prev => ({ ...prev, inputText: value })),\n//     });\n//     const handleChange = (event: { target: { value: any; }; }) => {\n//         const { value } = event.target;\n//         data.setInputText(value); // Ensure this function is defined\n//     };\n//     return (\n//         <input \n//             type=\"text\" \n//             value={data.inputText} \n//             onChange={handleChange} \n//         />\n//     );\n// };\n// export default InputNode;\n// InputNode.tsx\nimport React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const InputNode=_ref=>{let{data}=_ref;const[inputText,setInputText]=React.useState(data.inputText);const handleChange=e=>{setInputText(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'10px',background:'#D8F3DC',border:'1px solid #40916C',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:data.label}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputText,onChange:handleChange,placeholder:\"Enter Input\"})})]});};","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","InputNode","_ref","data","inputText","setInputText","useState","handleChange","e","target","value","style","padding","background","border","borderRadius","children","label","type","onChange","placeholder"],"sources":["D:/llm/LLM/llm-workflow-ui/llm/src/components/InputNode.tsx"],"sourcesContent":["\r\n// import React from 'react';\r\n\r\n// // Define the type for props\r\n// interface InputNodeProps {\r\n//   data: {\r\n//     label: string; // Define the structure of the data prop here\r\n//     inputText: string; // Add this line if you want to capture inputText\r\n//   };\r\n// }\r\n\r\n// export const InputNode: React.FC<InputNodeProps> = ({ data }) => {\r\n//   return (\r\n//     <div style={{ padding: '10px', background: '#D8F3DC', border: '1px solid #40916C', borderRadius: '5px' }}>\r\n//       <strong>{data.label}</strong>\r\n//       <div>\r\n//         <input type=\"text\" placeholder=\"Enter Input\" />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const InputNode = () => {\r\n//     const [data, setData] = useState({\r\n//         inputText: '',\r\n//         setInputText: (value: any) => setData(prev => ({ ...prev, inputText: value })),\r\n//     });\r\n\r\n//     const handleChange = (event: { target: { value: any; }; }) => {\r\n//         const { value } = event.target;\r\n//         data.setInputText(value); // Ensure this function is defined\r\n//     };\r\n\r\n//     return (\r\n//         <input \r\n//             type=\"text\" \r\n//             value={data.inputText} \r\n//             onChange={handleChange} \r\n//         />\r\n//     );\r\n// };\r\n\r\n// export default InputNode;\r\n// InputNode.tsx\r\n\r\nimport React from 'react';\r\n\r\ninterface InputNodeProps {\r\n  data: {\r\n    label: string;\r\n    inputText: string;\r\n  };\r\n}\r\n\r\nexport const InputNode: React.FC<InputNodeProps> = ({ data }) => {\r\n  const [inputText, setInputText] = React.useState(data.inputText);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '10px', background: '#D8F3DC', border: '1px solid #40916C', borderRadius: '5px' }}>\r\n      <strong>{data.label}</strong>\r\n      <div>\r\n        <input type=\"text\" value={inputText} onChange={handleChange} placeholder=\"Enter Input\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"mappings":"AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAS1B,MAAO,MAAM,CAAAC,SAAmC,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC1D,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGT,KAAK,CAACU,QAAQ,CAACH,IAAI,CAACC,SAAS,CAAC,CAEhE,KAAM,CAAAG,YAAY,CAAIC,CAAsC,EAAK,CAC/DH,YAAY,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC9B,CAAC,CAED,mBACEV,KAAA,QAAKW,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,SAAS,CAAEC,MAAM,CAAE,mBAAmB,CAAEC,YAAY,CAAE,KAAM,CAAE,CAAAC,QAAA,eACvGlB,IAAA,WAAAkB,QAAA,CAASb,IAAI,CAACc,KAAK,CAAS,CAAC,cAC7BnB,IAAA,QAAAkB,QAAA,cACElB,IAAA,UAAOoB,IAAI,CAAC,MAAM,CAACR,KAAK,CAAEN,SAAU,CAACe,QAAQ,CAAEZ,YAAa,CAACa,WAAW,CAAC,aAAa,CAAE,CAAC,CACtF,CAAC,EACH,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}