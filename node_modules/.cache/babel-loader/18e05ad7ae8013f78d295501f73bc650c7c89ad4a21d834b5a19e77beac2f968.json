{"ast":null,"code":"var _jsxFileName = \"D:\\\\llm\\\\llm-workflow-ui\\\\src\\\\components\\\\OutputNode.tsx\";\n// import React, { useState } from 'react';\n\n// // Define the type for props\n// interface OutputNodeProps {\n//   data: {\n//     label: string; // You can expand this type if needed\n//   };\n// }\n\n// export const OutputNode: React.FC<OutputNodeProps> = ({ data }) => {\n//   const [output, setOutput] = useState('No output yet');\n\n//   return (\n//     <div style={{ padding: '10px', background: '#FFB3C1', border: '1px solid #E63946', borderRadius: '5px' }}>\n//       <strong>{data.label}</strong>\n//       <div>\n//         <p>{output}</p>\n//       </div>\n//     </div>\n//   );\n// };\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OutputNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      background: '#FFB3C1',\n      border: '1px solid #E63946',\n      borderRadius: '5px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = OutputNode;\nvar _c;\n$RefreshReg$(_c, \"OutputNode\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","OutputNode","data","style","padding","background","border","borderRadius","children","label","fileName","_jsxFileName","lineNumber","columnNumber","output","_c","$RefreshReg$"],"sources":["D:/llm/llm-workflow-ui/src/components/OutputNode.tsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// // Define the type for props\r\n// interface OutputNodeProps {\r\n//   data: {\r\n//     label: string; // You can expand this type if needed\r\n//   };\r\n// }\r\n\r\n// export const OutputNode: React.FC<OutputNodeProps> = ({ data }) => {\r\n//   const [output, setOutput] = useState('No output yet');\r\n\r\n//   return (\r\n//     <div style={{ padding: '10px', background: '#FFB3C1', border: '1px solid #E63946', borderRadius: '5px' }}>\r\n//       <strong>{data.label}</strong>\r\n//       <div>\r\n//         <p>{output}</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nimport React from 'react';\r\n\r\ninterface OutputNodeProps {\r\n  data: {\r\n    label: string; \r\n    output: string; // Prop to hold the output\r\n  };\r\n}\r\n\r\nexport const OutputNode: React.FC<OutputNodeProps> = ({ data }) => {\r\n  return (\r\n    <div style={{ padding: '10px', background: '#FFB3C1', border: '1px solid #E63946', borderRadius: '5px' }}>\r\n      <strong>{data.label}</strong>\r\n      <div>\r\n        <p>{data.output}</p> {/* Display output from props */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1B,OAAO,MAAMC,UAAqC,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACjE,oBACEF,OAAA;IAAKG,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,SAAS;MAAEC,MAAM,EAAE,mBAAmB;MAAEC,YAAY,EAAE;IAAM,CAAE;IAAAC,QAAA,gBACvGR,OAAA;MAAAQ,QAAA,EAASN,IAAI,CAACO;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC7Bb,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,EAAIN,IAAI,CAACY;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GATWd,UAAqC;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}