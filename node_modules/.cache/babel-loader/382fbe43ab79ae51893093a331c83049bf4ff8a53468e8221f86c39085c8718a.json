{"ast":null,"code":"var _jsxFileName = \"D:\\\\llm\\\\llm-workflow-ui\\\\src\\\\components\\\\LLMNode.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// // Define the type for props\n// interface LLMNodeProps {\n//   data: {\n//     label: string; // Define the structure of the data prop here\n//   };\n// }\n\n// export const LLMNode: React.FC<LLMNodeProps> = ({ data }) => {\n//   const [modelConfig, setModelConfig] = useState('');\n\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setModelConfig(e.target.value);\n//   };\n\n//   return (\n//     <div style={{ padding: '10px', background: '#CAF0F8', border: '1px solid #0077B6', borderRadius: '5px' }}>\n//       <strong>{data.label}</strong>\n//       <div>\n//         <input\n//           type=\"text\"\n//           value={modelConfig}\n//           onChange={handleChange}\n//           placeholder=\"Model Config\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LLMNode = () => {\n  _s();\n  // Initialize state\n  const [data, setData] = useState({\n    modelConfig: {},\n    setModelConfig: newConfig => setData(prev => ({\n      ...prev,\n      modelConfig: newConfig\n    }))\n  });\n\n  // Handle input change\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    console.log(data); // Log to verify structure\n    if (typeof data.setModelConfig === 'function') {\n      data.setModelConfig({\n        ...data.modelConfig,\n        someKey: value\n      }); // Update modelConfig accordingly\n    } else {\n      console.error('setModelConfig is not defined in data');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(LLMNode, \"NE9TpAKFrdEXyI+0STxKqFiEzoM=\");\n_c = LLMNode;\nexport default LLMNode;\nvar _c;\n$RefreshReg$(_c, \"LLMNode\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LLMNode","_s","data","setData","modelConfig","setModelConfig","newConfig","prev","handleChange","event","value","target","console","log","someKey","error","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/llm/llm-workflow-ui/src/components/LLMNode.tsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// // Define the type for props\r\n// interface LLMNodeProps {\r\n//   data: {\r\n//     label: string; // Define the structure of the data prop here\r\n//   };\r\n// }\r\n\r\n// export const LLMNode: React.FC<LLMNodeProps> = ({ data }) => {\r\n//   const [modelConfig, setModelConfig] = useState('');\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setModelConfig(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: '10px', background: '#CAF0F8', border: '1px solid #0077B6', borderRadius: '5px' }}>\r\n//       <strong>{data.label}</strong>\r\n//       <div>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={modelConfig}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Model Config\"\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\nimport React, { useState } from 'react';\r\n\r\nconst LLMNode = () => {\r\n    // Initialize state\r\n    const [data, setData] = useState({\r\n        modelConfig: {},\r\n        setModelConfig: (newConfig: any) => setData(prev => ({ ...prev, modelConfig: newConfig })),\r\n    });\r\n\r\n    // Handle input change\r\n    const handleChange = (event) => {\r\n        const { value } = event.target;\r\n        console.log(data); // Log to verify structure\r\n        if (typeof data.setModelConfig === 'function') {\r\n            data.setModelConfig({ ...data.modelConfig, someKey: value }); // Update modelConfig accordingly\r\n        } else {\r\n            console.error('setModelConfig is not defined in data');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" onChange={handleChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LLMNode;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAC7BO,WAAW,EAAE,CAAC,CAAC;IACfC,cAAc,EAAGC,SAAc,IAAKH,OAAO,CAACI,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEH,WAAW,EAAEE;IAAU,CAAC,CAAC;EAC7F,CAAC,CAAC;;EAEF;EACA,MAAME,YAAY,GAAIC,KAAK,IAAK;IAC5B,MAAM;MAAEC;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9BC,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC,CAAC,CAAC;IACnB,IAAI,OAAOA,IAAI,CAACG,cAAc,KAAK,UAAU,EAAE;MAC3CH,IAAI,CAACG,cAAc,CAAC;QAAE,GAAGH,IAAI,CAACE,WAAW;QAAEU,OAAO,EAAEJ;MAAM,CAAC,CAAC,CAAC,CAAC;IAClE,CAAC,MAAM;MACHE,OAAO,CAACG,KAAK,CAAC,uCAAuC,CAAC;IAC1D;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAAiB,QAAA,eACIjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEV;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEd,CAAC;AAACrB,EAAA,CAvBID,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAyBb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}