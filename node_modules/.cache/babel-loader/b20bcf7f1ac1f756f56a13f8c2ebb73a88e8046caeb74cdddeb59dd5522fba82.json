{"ast":null,"code":"var _jsxFileName = \"D:\\\\llm\\\\llm-workflow-ui\\\\src\\\\components\\\\InputNode.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n\n// // Define the type for props\n// interface InputNodeProps {\n//   data: {\n//     label: string; // Define the structure of the data prop here\n//     inputText: string; // Add this line if you want to capture inputText\n//   };\n// }\n\n// export const InputNode: React.FC<InputNodeProps> = ({ data }) => {\n//   return (\n//     <div style={{ padding: '10px', background: '#D8F3DC', border: '1px solid #40916C', borderRadius: '5px' }}>\n//       <strong>{data.label}</strong>\n//       <div>\n//         <input type=\"text\" placeholder=\"Enter Input\" />\n//       </div>\n//     </div>\n//   );\n// };\n\n// import React, { useState } from 'react';\n\n// const InputNode = () => {\n//     const [data, setData] = useState({\n//         inputText: '',\n//         setInputText: (value: any) => setData(prev => ({ ...prev, inputText: value })),\n//     });\n\n//     const handleChange = (event: { target: { value: any; }; }) => {\n//         const { value } = event.target;\n//         data.setInputText(value); // Ensure this function is defined\n//     };\n\n//     return (\n//         <input \n//             type=\"text\" \n//             value={data.inputText} \n//             onChange={handleChange} \n//         />\n//     );\n// };\n\n// export default InputNode;\n// InputNode.tsx\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputNode = ({\n  data,\n  onChange\n}) => {\n  _s();\n  const [inputText, setInputText] = useState(data.inputText);\n  const handleChange = e => {\n    setInputText(e.target.value);\n    onChange(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      background: '#D8F3DC',\n      border: '1px solid #40916C',\n      borderRadius: '5px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: handleChange,\n        placeholder: \"Enter Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(InputNode, \"RE6z1tN3KAcDWfyPV4mRjC69Zko=\");\n_c = InputNode;\nvar _c;\n$RefreshReg$(_c, \"InputNode\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InputNode","data","onChange","_s","inputText","setInputText","handleChange","e","target","value","style","padding","background","border","borderRadius","children","label","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["D:/llm/llm-workflow-ui/src/components/InputNode.tsx"],"sourcesContent":["\r\n// import React from 'react';\r\n\r\n// // Define the type for props\r\n// interface InputNodeProps {\r\n//   data: {\r\n//     label: string; // Define the structure of the data prop here\r\n//     inputText: string; // Add this line if you want to capture inputText\r\n//   };\r\n// }\r\n\r\n// export const InputNode: React.FC<InputNodeProps> = ({ data }) => {\r\n//   return (\r\n//     <div style={{ padding: '10px', background: '#D8F3DC', border: '1px solid #40916C', borderRadius: '5px' }}>\r\n//       <strong>{data.label}</strong>\r\n//       <div>\r\n//         <input type=\"text\" placeholder=\"Enter Input\" />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// const InputNode = () => {\r\n//     const [data, setData] = useState({\r\n//         inputText: '',\r\n//         setInputText: (value: any) => setData(prev => ({ ...prev, inputText: value })),\r\n//     });\r\n\r\n//     const handleChange = (event: { target: { value: any; }; }) => {\r\n//         const { value } = event.target;\r\n//         data.setInputText(value); // Ensure this function is defined\r\n//     };\r\n\r\n//     return (\r\n//         <input \r\n//             type=\"text\" \r\n//             value={data.inputText} \r\n//             onChange={handleChange} \r\n//         />\r\n//     );\r\n// };\r\n\r\n// export default InputNode;\r\n// InputNode.tsx\r\n\r\nimport React, { useState } from 'react';\r\n\r\ninterface InputNodeProps {\r\n  data: {\r\n    label: string;\r\n    inputText: string;\r\n  };\r\n  onChange: (inputText: string) => void;\r\n}\r\n\r\nexport const InputNode: React.FC<InputNodeProps> = ({ data, onChange }) => {\r\n  const [inputText, setInputText] = useState(data.inputText);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputText(e.target.value);\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '10px', background: '#D8F3DC', border: '1px solid #40916C', borderRadius: '5px' }}>\r\n      <strong>{data.label}</strong>\r\n      <div>\r\n        <input type=\"text\" value={inputText} onChange={handleChange} placeholder=\"Enter Input\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"mappings":";;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUxC,OAAO,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAACI,IAAI,CAACG,SAAS,CAAC;EAE1D,MAAME,YAAY,GAAIC,CAAsC,IAAK;IAC/DF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC5BP,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACEV,OAAA;IAAKW,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,SAAS;MAAEC,MAAM,EAAE,mBAAmB;MAAEC,YAAY,EAAE;IAAM,CAAE;IAAAC,QAAA,gBACvGhB,OAAA;MAAAgB,QAAA,EAASd,IAAI,CAACe;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC7BrB,OAAA;MAAAgB,QAAA,eACEhB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACZ,KAAK,EAAEL,SAAU;QAACF,QAAQ,EAAEI,YAAa;QAACgB,WAAW,EAAC;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhBWH,SAAmC;AAAAuB,EAAA,GAAnCvB,SAAmC;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}