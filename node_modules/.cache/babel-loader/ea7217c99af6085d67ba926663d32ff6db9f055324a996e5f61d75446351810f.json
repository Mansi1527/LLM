{"ast":null,"code":"var _jsxFileName = \"D:\\\\llm\\\\llm-workflow-ui\\\\src\\\\components\\\\LLMNode.tsx\";\n// import React, { useState } from 'react';\n\n// // Define the type for props\n// interface LLMNodeProps {\n//   data: {\n//     label: string; // Define the structure of the data prop here\n//   };\n// }\n\n// export const LLMNode: React.FC<LLMNodeProps> = ({ data }) => {\n//   const [modelConfig, setModelConfig] = useState('');\n\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     setModelConfig(e.target.value);\n//   };\n\n//   return (\n//     <div style={{ padding: '10px', background: '#CAF0F8', border: '1px solid #0077B6', borderRadius: '5px' }}>\n//       <strong>{data.label}</strong>\n//       <div>\n//         <input\n//           type=\"text\"\n//           value={modelConfig}\n//           onChange={handleChange}\n//           placeholder=\"Model Config\"\n//         />\n//       </div>\n//     </div>\n//   );\n// };\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LLMNode = ({\n  data\n}) => {\n  const handleChange = e => {\n    data.setModelConfig({\n      ...data.modelConfig,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      background: '#CAF0F8',\n      border: '1px solid #0077B6',\n      borderRadius: '5px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"modelName\",\n        value: data.modelConfig.modelName,\n        onChange: handleChange,\n        placeholder: \"Model Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"temperature\",\n        value: data.modelConfig.temperature,\n        onChange: handleChange,\n        placeholder: \"Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c = LLMNode;\nvar _c;\n$RefreshReg$(_c, \"LLMNode\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LLMNode","data","handleChange","e","setModelConfig","modelConfig","target","name","value","style","padding","background","border","borderRadius","children","label","fileName","_jsxFileName","lineNumber","columnNumber","type","modelName","onChange","placeholder","temperature","_c","$RefreshReg$"],"sources":["D:/llm/llm-workflow-ui/src/components/LLMNode.tsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// // Define the type for props\r\n// interface LLMNodeProps {\r\n//   data: {\r\n//     label: string; // Define the structure of the data prop here\r\n//   };\r\n// }\r\n\r\n// export const LLMNode: React.FC<LLMNodeProps> = ({ data }) => {\r\n//   const [modelConfig, setModelConfig] = useState('');\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setModelConfig(e.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: '10px', background: '#CAF0F8', border: '1px solid #0077B6', borderRadius: '5px' }}>\r\n//       <strong>{data.label}</strong>\r\n//       <div>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={modelConfig}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Model Config\"\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\nimport React from 'react';\r\n\r\ninterface LLMNodeProps {\r\n  data: {\r\n    label: string; \r\n    modelConfig: {\r\n      modelName: string; // Expand this structure as needed\r\n      temperature?: number;\r\n      maxTokens?: number;\r\n      topP?: number;\r\n      frequencyPenalty?: number;\r\n      presencePenalty?: number;\r\n    };\r\n    setModelConfig: (config: any) => void; // Add a function to update modelConfig\r\n  };\r\n}\r\n\r\nexport const LLMNode: React.FC<LLMNodeProps> = ({ data }) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    data.setModelConfig({\r\n      ...data.modelConfig,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '10px', background: '#CAF0F8', border: '1px solid #0077B6', borderRadius: '5px' }}>\r\n      <strong>{data.label}</strong>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"modelName\"\r\n          value={data.modelConfig.modelName}\r\n          onChange={handleChange}\r\n          placeholder=\"Model Name\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"temperature\"\r\n          value={data.modelConfig.temperature}\r\n          onChange={handleChange}\r\n          placeholder=\"Temperature\"\r\n        />\r\n        {/* Add more inputs for other modelConfig properties */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiB1B,OAAO,MAAMC,OAA+B,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC3D,MAAMC,YAAY,GAAIC,CAAsC,IAAK;IAC/DF,IAAI,CAACG,cAAc,CAAC;MAClB,GAAGH,IAAI,CAACI,WAAW;MACnB,CAACF,CAAC,CAACG,MAAM,CAACC,IAAI,GAAGJ,CAAC,CAACG,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,oBACET,OAAA;IAAKU,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,SAAS;MAAEC,MAAM,EAAE,mBAAmB;MAAEC,YAAY,EAAE;IAAM,CAAE;IAAAC,QAAA,gBACvGf,OAAA;MAAAe,QAAA,EAASb,IAAI,CAACc;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC7BpB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXb,IAAI,EAAC,WAAW;QAChBC,KAAK,EAAEP,IAAI,CAACI,WAAW,CAACgB,SAAU;QAClCC,QAAQ,EAAEpB,YAAa;QACvBqB,WAAW,EAAC;MAAY;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFpB,OAAA;QACEqB,IAAI,EAAC,QAAQ;QACbb,IAAI,EAAC,aAAa;QAClBC,KAAK,EAAEP,IAAI,CAACI,WAAW,CAACmB,WAAY;QACpCF,QAAQ,EAAEpB,YAAa;QACvBqB,WAAW,EAAC;MAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACM,EAAA,GA9BWzB,OAA+B;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}